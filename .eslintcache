[{"C:\\Users\\user\\react\\portfolio\\src\\index.js":"1","C:\\Users\\user\\react\\portfolio\\src\\App.js":"2","C:\\Users\\user\\react\\portfolio\\src\\reportWebVitals.js":"3"},{"size":243,"mtime":1610285141658,"results":"4","hashOfConfig":"5"},{"size":10863,"mtime":1610477351081,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1608243964160,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1j883we",{"filePath":"11","messages":"12","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\user\\react\\portfolio\\src\\index.js",[],["16","17"],"C:\\Users\\user\\react\\portfolio\\src\\App.js",["18","19","20","21","22","23","24"],"import { useEffect, useRef } from 'react';\nimport './App.css';\nimport React from \"react\";\nimport stackPhoto from \"./assets/img/crabswim.gif\"\n\nfunction App() {\n  const slideWrapRef = useRef();\n\n\n  // const pageArray = new Array(4).fill({ ref: React.createRef(), isSliding: false });\n  const pageArray = useRef(new Array());\n  const currentPage = useRef(0);\n  const isAllSliding = useRef(false);\n  const isSlidingArray = useRef([0, 1, 2]);\n  const slideDirection = useRef(null);\n  const counterArray = useRef(new Array());\n  const prograssBarArray = useRef(new Array());\n\n  const scrollEvent = (e) => {\n    if (isAllSliding.current) return; // 모든 슬라이더가 끝나면\n    // event.preventDefault();\n    if (e.deltaY < 0) {\n      // 스크롤 아래 방향으로\n      pageEvent(-1);\n    } else {\n      // 위로\n      pageEvent(1)\n    }\n  }\n\n  const pageEvent = (direction) => {\n    if (currentPage.current === 0 && direction === -1) return;\n    if (currentPage.current === pageArray.current.length - 1 && direction === 1) return;\n\n    isAllSliding.current = true;\n    pageArray.current[currentPage.current].style.zIndex = `0`;\n    pageArray.current[currentPage.current].classList.remove(\"active\");\n\n    currentPage.current += direction;\n    slideDirection.current = -direction;\n    isSlidingArray.current[currentPage.current] = 0;\n\n    pageArray.current[currentPage.current].style.zIndex = `1`;\n    pageArray.current[currentPage.current].style.transform = `translateX(0px)`;\n    pageArray.current[currentPage.current].classList.add(\"active\");\n\n    setTimeout(() => {\n      for (let i = 0; i < pageArray.current.length; i++) {\n        if (currentPage.current === i) continue\n        const screenWidth = document.body.offsetWidth;\n        isSlidingArray.current[i] += slideDirection.current;\n        const distance = screenWidth * isSlidingArray.current[i];\n        pageArray.current[i].style.transform = `translateX(${distance}px)`;\n      }\n      isAllSliding.current = false;\n    }, 800);\n  }\n\n  useEffect(() => {\n    console.log(counterArray.current[0]);\n    if (currentPage.current === 2) {\n      for (let i = 0; i < 5; i++) {\n      }\n    }\n  }, [currentPage.current])\n\n  useEffect(() => {\n    for (let i = 0; i < pageArray.current.length; i++) {\n      const screenWidth = document.body.offsetWidth;\n      const distance = screenWidth * i;\n      pageArray.current[i].style.transform = `translateX(${distance}px)`;\n    }\n  }, []);\n\n  useEffect(() => {\n\n    window.addEventListener('wheel', scrollEvent);\n\n    return () => {\n      window.removeEventListener('wheel', scrollEvent);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header>\n\n      </header>\n      <main className=\"slide\">\n        <ul ref={slideWrapRef} className=\"slide-wrap\">\n          {/* home start*/}\n          <li\n            ref={(element => {\n              pageArray.current.push(element)\n            })}\n            className=\"home page page0 active\">\n            <div className=\"verticla-align\">\n              <div className=\"container\">\n                <div className=\"introduce row flex-direction-column \">\n                  <div className=\"introduce-name\">\n                    <h5>정하형</h5>\n                  </div>\n                  <div className=\"introduce-title\">\n                    <h1>저는 유쾌한 프론트엔드 개발자 입니다.</h1>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n          {/* home end*/}\n          {/* service start*/}\n          <li\n            ref={(element => {\n              pageArray.current.push(element)\n            })}\n            className=\"service page page1\">\n            <div className=\"verticla-align\">\n              <div className=\"container\">\n                <div className=\"row flex-direction-column\">\n                  <div className=\"service-title\">\n                    <h4>안녕하세요 프론트엔드 개발자 정하형 입니다.</h4>\n                  </div>\n                  <div className=\"vlt-gap-35\"></div>\n                  <ul className=\"service-list\">\n                    {/* hover event 추가 */}\n                    <li className=\"service__box row\">\n                      <div className=\"vlt-gap-35\"></div>\n                      <div className=\"service__icon\">\n                        <span><i className=\"fas fa-laptop-code\"></i></span>\n                      </div>\n                      <div className=\"vlt-gap-35\"></div>\n                      <div className=\"service__title\">\n                        <h3>웹 개발을 할수있어요 !</h3>\n                      </div>\n                      <div className=\"vlt-gap-15\"></div>\n                      <div className=\"service__description\">\n                        <p>네.</p>\n                      </div>\n                    </li>\n                    <li className=\"service__box row\">\n                      <div className=\"vlt-gap-35\"></div>\n                      <div className=\"service__icon\">\n                        <span><i className=\"fas fa-search-plus\"></i></span>\n                      </div>\n                      <div className=\"vlt-gap-35\"></div>\n                      <div className=\"service__title\">\n                        <h3>최적화를 중요하게 생각합니다.</h3>\n                      </div>\n                      <div className=\"vlt-gap-15\"></div>\n                      <div className=\"service__description\">\n                        <p>사용자의 메모리를 최소한으로 사용할수 있게 항상 고민합니다.</p>\n                      </div>\n                    </li>\n                    <li className=\"service__box row\">\n                      <div className=\"vlt-gap-35\"></div>\n                      <div className=\"service__icon\">\n                        <span><img></img></span>\n                      </div>\n                      <div className=\"vlt-gap-35\"></div>\n                      <div className=\"service__title\">\n                        <h3>웹 개발을 할수있어요 !</h3>\n                      </div>\n                      <div className=\"vlt-gap-15\"></div>\n                      <div className=\"service__description\">\n                        <p>네.</p>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </li>\n          {/* service end*/}\n          <li\n            ref={(element => {\n              pageArray.current.push(element)\n            })}\n            className=\"stack page page2\">\n            <div className=\"verticla-align\">\n              <div className=\"container\">\n                <div className=\"row align-items-center\">\n                  <figure className=\"photo\">\n                    <div className=\"photo__inside\">\n                      <img src={stackPhoto}></img>\n                    </div>\n                    <figcaption>\n                      마땅히 올릴 사진이 없어서...\n                    </figcaption>\n                  </figure>\n                  <div className=\"stack__wrap\">\n                    <div className=\"stack__title\">\n                      <h4>저는 최적화 와 친밀한 디자인을 중요시 여기면서 웹 사이트를 만드는 것을 즐겨합니다.</h4>\n                    </div>\n                    <div className=\"vlt-gap-35\"></div>\n                    <ul className=\"prograss-bar__list\">\n                      <li className=\"prograss-bar\">\n                        <div className=\"prograss-bar__title\">\n                          <h5>\n                            자바스크립트 <span ref={(element => {\n                              counterArray.current.push(element)\n                            })} className=\"counter\">- 87%</span>\n                          </h5>\n                        </div>\n                        <div className=\"prograss-bar__bar\">\n                          <span ref={(element => {\n                            prograssBarArray.current.push(element)\n                          })} ></span>\n                        </div>\n                      </li>\n                      <li className=\"prograss-bar\">\n                        <div className=\"prograss-bar__title\">\n                          <h5>\n                            html <span ref={(element => {\n                              counterArray.current.push(element)\n                            })} className=\"counter\">- 70%</span>\n                          </h5>\n                        </div>\n                        <div className=\"prograss-bar__bar\">\n                          <span ref={(element => {\n                            prograssBarArray.current.push(element)\n                          })} className=\"counter\"></span>\n                        </div>\n                      </li>\n                      <li className=\"prograss-bar\">\n                        <div className=\"prograss-bar__title\">\n                          <h5>\n                            css <span ref={(element => {\n                              counterArray.current.push(element)\n                            })} className=\"counter\">- 75%</span>\n                          </h5>\n                        </div>\n                        <div className=\"prograss-bar__bar\">\n                          <span ref={(element => {\n                            prograssBarArray.current.push(element)\n                          })} ></span>\n                        </div>\n                      </li>\n                      <li className=\"prograss-bar\">\n                        <div className=\"prograss-bar__title\">\n                          <h5>\n                            react <span ref={(element => {\n                              counterArray.current.push(element)\n                            })} className=\"counter\">- 80%</span>\n                          </h5>\n                        </div>\n                        <div className=\"prograss-bar__bar\">\n                          <span ref={(element => {\n                            prograssBarArray.current.push(element)\n                          })} ></span>\n                        </div>\n                      </li>\n                      <li className=\"prograss-bar\">\n                        <div className=\"prograss-bar__title\">\n                          <h5>\n                            redux <span className=\"counter\">- 85%</span>\n                          </h5>\n                        </div>\n                        <div className=\"prograss-bar__bar\">\n                          <span ref={(element => {\n                            prograssBarArray.current.push(element)\n                          })} ></span>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\user\\react\\portfolio\\src\\reportWebVitals.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":11,"column":28,"nodeType":"31","messageId":"32","endLine":11,"endColumn":39},{"ruleId":"29","severity":1,"message":"30","line":16,"column":31,"nodeType":"31","messageId":"32","endLine":16,"endColumn":42},{"ruleId":"29","severity":1,"message":"30","line":17,"column":35,"nodeType":"31","messageId":"32","endLine":17,"endColumn":46},{"ruleId":"33","severity":1,"message":"34","line":65,"column":6,"nodeType":"35","endLine":65,"endColumn":27,"suggestions":"36"},{"ruleId":"33","severity":1,"message":"37","line":82,"column":6,"nodeType":"35","endLine":82,"endColumn":8,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":157,"column":31,"nodeType":"41","endLine":157,"endColumn":36},{"ruleId":"39","severity":1,"message":"40","line":184,"column":23,"nodeType":"41","endLine":184,"endColumn":45},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'currentPage.current'. Either exclude it or remove the dependency array. Mutable values like 'currentPage.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["44"],"React Hook useEffect has a missing dependency: 'scrollEvent'. Either include it or remove the dependency array.",["45"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"48","fix":"49"},"Update the dependencies array to be: []",{"range":"50","text":"51"},"Update the dependencies array to be: [scrollEvent]",{"range":"52","text":"53"},[2114,2135],"[]",[2558,2560],"[scrollEvent]"]